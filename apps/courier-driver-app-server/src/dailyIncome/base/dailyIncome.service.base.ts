/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, DailyIncome as PrismaDailyIncome } from "@prisma/client";

export class DailyIncomeServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.DailyIncomeCountArgs, "select">
  ): Promise<number> {
    return this.prisma.dailyIncome.count(args);
  }

  async dailyIncomes(
    args: Prisma.DailyIncomeFindManyArgs
  ): Promise<PrismaDailyIncome[]> {
    return this.prisma.dailyIncome.findMany(args);
  }
  async dailyIncome(
    args: Prisma.DailyIncomeFindUniqueArgs
  ): Promise<PrismaDailyIncome | null> {
    return this.prisma.dailyIncome.findUnique(args);
  }
  async createDailyIncome(
    args: Prisma.DailyIncomeCreateArgs
  ): Promise<PrismaDailyIncome> {
    return this.prisma.dailyIncome.create(args);
  }
  async updateDailyIncome(
    args: Prisma.DailyIncomeUpdateArgs
  ): Promise<PrismaDailyIncome> {
    return this.prisma.dailyIncome.update(args);
  }
  async deleteDailyIncome(
    args: Prisma.DailyIncomeDeleteArgs
  ): Promise<PrismaDailyIncome> {
    return this.prisma.dailyIncome.delete(args);
  }
}
